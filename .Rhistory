library(modelsummary)
modelsummary(modelrl,
title = "Regresión Logística",
stars = TRUE,
output = "kableExtra")
# cambio de referencia
vol$sex=relevel(vol$sex,ref = "male")
#regresion
rlog1=glm(h1, data=vol,family = binomial)
modelrl=list('Ser Voluntario (I)'=rlog1)
modelsummary(modelrl,
title = "Regresión Logística (con cambio de referencia en sexo)",
stars = TRUE,
output = "kableExtra")
sexF=coef(rlog1)["sexfemale"]
exp(sexF)
### second hypothesis
h2=formula(volunteer~sex + neuroticism)
rlog2=glm(h2, data=vol,family = binomial)
modelsrl=list('Ser Voluntario (I)'=rlog1,
'Ser Voluntario (II)'=rlog2)
# formato creado para modelsummary
formatoNumero = function(x) format(x, digits = 4, scientific = FALSE)
modelsummary(modelsrl,
fmt=formatoNumero, # usa función que creé antes
exponentiate = T, # coeficientes sin logaritmo
statistic = 'conf.int', # mostrar ICs
title = "Regresión Logísticas (Coeficientes Exponenciados)",
stars = TRUE,
output = "kableExtra")
h3=formula(volunteer~sex + neuroticism + extraversion)
rlog3=glm(h3, data=vol,family = binomial)
summary(rlog3)
modelsrl=list('Ser Voluntario (I)'=rlog1,
'Ser Voluntario (II)'=rlog2,
'Ser Voluntario (III)'=rlog3)
f <- function(x) format(x, digits = 4, scientific = FALSE)
modelsummary(modelsrl,
fmt=formatoNumero,
exponentiate = T,
statistic = 'conf.int',
title = "Comparando Regresión Logísticas (Coeficientes Exponenciados)",
stars = TRUE,
gof_map = c("nobs","aic","bic","rmse","logLik"), #comparar
gof_omit = c("F"),
output = "kableExtra")
vol$sex_AsNum=as.numeric(vol$sex) # it is a factor.
sdVIs=apply(vol[,c("sex_AsNum","neuroticism", "extraversion")],2,sd)
DF=list(LogitSt=sdVIs*coef(rlog3)[c(2,3,4)])%>%
data.frame()
DF%>% kable(caption = "Coeficientes Standarizados (ordenar vía valores absolutos)")%>%
kableExtra::kable_styling(full_width = F)
vol$sex
vol$sex_AsNum
vol$sex
vol$sex_AsNum
vol$sex
vol$sexFem_num=ifelse(vol$sex=='male',0,1) # it is a factor.
coef(rlog3)[c(2,3,4)]
sdVIs*coef(rlog3)[c(2,3,4)]
LogitSt
DF=list(LogitSt=sdVIs*coef(rlog3)[c(2,3,4)])%>%
data.frame()
DF
vol$sexFem_num=ifelse(vol$sex=='male',0,1) # it is a factor.
sdVIs=apply(vol[,c("sexFem_num","neuroticism", "extraversion")],2,sd)
DF=list(LogitSt=sdVIs*coef(rlog3)[c(2,3,4)])%>%
data.frame()
DF%>% kable(caption = "Coeficientes Standarizados (ordenar vía valores absolutos)")%>%
kableExtra::kable_styling(full_width = F)
DF[order(DF$LogitSt)]
DF[order(DF$LogitSt),]
DF[order(DF$LogitSt),]%>% kable(caption = "Coeficientes Estandarizados (ordenar vía valores absolutos)")%>%
kableExtra::kable_styling(full_width = F)
DF[order(DF),]
DF
DF[ordered(DF),]
DF[ordered(DF$LogitSt),]
DF
DF[order(DF$LogitSt),]
DF[order(LogitSt),]
DF[order(DF$LogitSt),]
DF
str(DF)
DF[order(DF$LogitSt),]
DF[order(DF$LogitSt)]
DF[,order(DF$LogitSt)]
DF$LogitSt[order(DF$LogitSt)]
DF[order(DF$LogitSt),"LogitSt"]
vol$sexFem_num=ifelse(vol$sex=='male',0,1) # 1 es para mujer
sdVIs=apply(vol[,c("sexFem_num","neuroticism", "extraversion")],2,sd)
DF=list(LogitSt=sdVIs*coef(rlog3)[c(2,3,4)])%>%
data.frame()
# DF tiene los coeficientes estandarizados
DF%>% kable(caption = "Coeficientes Estandarizados (ordenar vía valores absolutos)")%>%
kableExtra::kable_styling(full_width = F)
library(lmtest)
lrtest(rlog1,rlog2, rlog3) %>%
kable(caption = "Tabla LRT para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
predictedProbs <- predict(rlog3, vol,type = "response")
predictedProbs <- predict(rlog3, vol,type = "response")
predictedProbs
predictedProbs <- predict(rlog3, vol,type = "response")
head(predictedProbs)
predictedProbs <- predict(rlog3, vol,type = "response")
# veamos algunos de ellos
head(predictedProbs)
vol$predicted=ifelse(predictedProbs>0.5,"yes","no")
head(vol,10)
head(vol[,c("predicted","volunteer")],10)
as.data.frame(confusionMatrix)
confusionMatrix=table(predicted =  vol$predicted,
volunteer = vol$volunteer)
library(cvms)
plot_confusion_matrix(#as.data.frame(confusionMatrix),
target_col = vol$volunteer,
prediction_col = vol$predicted)
confusion_matrix(predictions =  vol$predicted,
targets= vol$volunteer)
ConfMatrix=confusion_matrix(predictions =  vol$predicted,
targets= vol$volunteer)
ConfMatrix
plot_confusion_matrix(ConfMatrix)
plot_confusion_matrix(ConfMatrix,
class_order=c("yes","no"))
ConfMatrix=confusion_matrix(predictions =  vol$predicted,
targets= vol$volunteer)
library(cvms)
plot_confusion_matrix(ConfMatrix,
class_order=c("yes","no"))
ConfMatrix$Sensitivity
ConfMatrix$Sensitivity
ConfMatrix$Specificity
ConfMatrix$Kappa
coef(rp2)[c(2,3)]
rm(list = ls())
library(rio)
censo2007=import("https://github.com/Estadistica-AnalisisPolitico/Sesion3/raw/main/data2007.xlsx")
sdVD=sd(censo2007_wide_Totales$conSeguro_Total)
censo2007_wide_Totales
rm(list = ls())
library(rio)
censo2007=import("https://github.com/Estadistica-AnalisisPolitico/Sesion3/raw/main/data2007.xlsx")
rm(list = ls())
library(rio)
censo2007=import("https://github.com/Estadistica-AnalisisPolitico/Sesion3/raw/main/data2007.xlsx")
rm(list = ls())
library(rio)
censo2007=import("https://github.com/Estadistica-AnalisisPolitico/Sesion3/raw/main/data2007.xlsx")
rm(list = ls())
library(rio)
censo2007=import("https://github.com/Estadistica-AnalisisPolitico/Sesion3/raw/main/data2007.csv")
head(censo2007)
View(censo2007)
rm(list = ls())
library(rio)
censo2007=import("https://github.com/Estadistica-AnalisisPolitico/Sesion3/raw/main/data2007.xlsx")
rm(list = ls())
library(readxl)
censo2007=read_excel("https://github.com/Estadistica-AnalisisPolitico/Sesion3/raw/main/data2007.xlsx")
?
read_excel
rm(list = ls())
library(rio)
censo2007=import("https://github.com/Estadistica-AnalisisPolitico/Sesion3/raw/main/data2007.xlsx")
rm(list = ls())
library(rio)
censo2007=import("https://github.com/Estadistica-AnalisisPolitico/Sesion3/blob/609748aca996455f457027a5d761a3bf9d3cfa20/data2007.xlsx")
rm(list = ls())
library(rio)
censo2007=import("https://github.com/Estadistica-AnalisisPolitico/Sesion3/blob/609748aca996455f457027a5d761a3bf9d3cfa20/data2007.xlsx")
rm(list = ls())
library(rio)
censo2007=import("https://github.com/Estadistica-AnalisisPolitico/Sesion3/raw/main/data2007.xlsx")
rm(list = ls())
library(rio)
censo2007=import("https://github.com/Estadistica-AnalisisPolitico/Sesion3/raw/main/data2007.csv")
head(censo2007)
rm(list = ls())
library(rio)
censo2007=read.csv("https://github.com/Estadistica-AnalisisPolitico/Sesion3/raw/main/data2007.csv")
rm(list = ls())
library(rio)
censo2007=read.csv("https://github.com/Estadistica-AnalisisPolitico/Sesion3/raw/main/data2007Peru.csv")
rm(list = ls())
library(rio)
censo2007=read.csv("https://github.com/Estadistica-AnalisisPolitico/Sesion3/raw/main/data2007peru.csv")
rm(list = ls())
library(rio)
censo2007=import("https://github.com/Estadistica-AnalisisPolitico/Sesion3/raw/main/data2007peru.xlsx")
dep=vol$volunteer # a la fila
rm(list = ls()) # clear memory
knitr::knit_hooks$set(inline = as.character) # inline as string
gitLink="https://vincentarelbundock.github.io/Rdatasets/csv/carData/Cowles.csv"
vol=read.csv(gitLink)[,-1] #no first column
# formatting:
vol[,c(3,4)]=lapply(vol[,c(3,4)],as.factor)
# display table
library(magrittr) # needed for pipe %>%
vol%>%
rmarkdown::paged_table()
library(summarytools)
library(kableExtra)
# usemos la función "dfSummary" de paquete "summarytools"
dfSummary(vol,
plain.ascii  = FALSE,
varnumbers = FALSE,
style        = "grid",
graph.col=F,
na.col    = FALSE) %>%
kable(caption = "Descriptivos Univariados")%>%
kable_styling(full_width = F)
dep=vol$volunteer # a la fila
ind=vol$sex # a la columna
volsexTable=table(dep,ind,dnn = c('volunteer','sex'))
### suma por columna
addmargins(volsexTable,margin = 1)%>%
kable(caption = "Tabla de Contingencia: 'Sexo' y 'Ser Voluntario'")%>%
kableExtra::kable_styling(full_width = F)
dep=vol$volunteer # a la fila
ind=vol$sex # a la columna
volsexTable=table(dep,ind,dnn = c('volunteer','sex'))
### suma por columna
addmargins(volsexTable,margin = 2)%>%
kable(caption = "Tabla de Contingencia: 'Sexo' y 'Ser Voluntario'")%>%
kableExtra::kable_styling(full_width = F)
dep=vol$volunteer # a la fila
ind=vol$sex # a la columna
volsexTable=table(dep,ind,dnn = c('volunteer','sex'))
### suma por columna
addmargins(volsexTable,margin = 3)%>%
kable(caption = "Tabla de Contingencia: 'Sexo' y 'Ser Voluntario'")%>%
kableExtra::kable_styling(full_width = F)
dep=vol$volunteer # a la fila
ind=vol$sex # a la columna
volsexTable=table(dep,ind,dnn = c('volunteer','sex'))
### suma por columna
addmargins(volsexTable)%>%
kable(caption = "Tabla de Contingencia: 'Sexo' y 'Ser Voluntario'")%>%
kableExtra::kable_styling(full_width = F)
as.factor(0)
as.numeric(as.factor(0))
as.numeric(as.factor(c(0,1)))
as.numeric(as.factor(c("no","yes")))
vol$volunteer
as.logical(vol$volunteer)
as.logical(vol$volunteer)
as.logical(as.numeric(vol$volunteer))
ifelse(vol$volunteer==2,T,F)
vol$IsVolunteer=ifelse(vol$volunteer=="yes",T,F)
vol$IsVolunteer_1=ifelse(vol$volunteer=="yes",1,0)
vol$IsVolunteer=ifelse(vol$volunteer=="yes",T,F)
vol$IsVolunteer_1=ifelse(vol$volunteer=="yes",1,0)
# nos queda:
vol[,c("volunteer","IsVolunteer","IsVolunteer_1")]
rm(list = ls()) # clear memory
knitr::knit_hooks$set(inline = as.character) # inline as string
gitLink="https://vincentarelbundock.github.io/Rdatasets/csv/carData/Cowles.csv"
vol=read.csv(gitLink)[,-1] #no first column
# formatting:
vol[,c(3,4)]=lapply(vol[,c(3,4)],as.factor)
# display table
library(magrittr) # needed for pipe %>%
vol%>%
rmarkdown::paged_table()
library(summarytools)
library(kableExtra)
# usemos la función "dfSummary" de paquete "summarytools"
dfSummary(vol,
plain.ascii  = FALSE,
varnumbers = FALSE,
style        = "grid",
graph.col=F,
na.col    = FALSE) %>%
kable(caption = "Descriptivos Univariados")%>%
kable_styling(full_width = F)
dep=vol$volunteer # a la fila
ind=vol$sex # a la columna
volsexTable=table(dep,ind,dnn = c('volunteer','sex'))
### suma por fila y columna
addmargins(volsexTable)%>%
kable(caption = "Tabla de Contingencia: 'Sexo' y 'Ser Voluntario'")%>%
kableExtra::kable_styling(full_width = F)
ProbMujVol=volsexTable[2,1]/sum(volsexTable[,1])
MASS::fractions(ProbMujVol)
ProbMujVol
OddsMujVol=volsexTable[2,1]/volsexTable[1,1]
MASS::fractions(OddsMujVol)
OddsMujVol
ProbMujVol/(1-ProbMujVol)
ProbHomVol=volsexTable[2,2]/sum(volsexTable[,2])
MASS::fractions(ProbHomVol)
ProbHomVol
OddsHomVol=ProbHomVol/(1-ProbHomVol)
OddsHomVol
(OR_MujHom=OddsMujVol/OddsHomVol)
MASS::fractions(OddsMujVol/OddsHomVol)
mosaicplot( t(volsexTable),col = c("orange", "green"),main = "")
### semilla
set.seed(2019)
### first hypothesis
h1=formula(volunteer~sex)
#regression
rlog1=glm(h1, data=vol,family = binomial)
modelrl=list('Ser Voluntario (I)'=rlog1)
#f <- function(x) format(x, digits = 4, scientific = FALSE)
library(modelsummary)
modelsummary(modelrl,
title = "Regresión Logística",
stars = TRUE,
output = "kableExtra")
as.numeric(as.factor(c("no","yes")))
View(vol)
vol$IsVolunteer=ifelse(vol$volunteer=="yes",T,F)
vol$IsVolunteer_1=ifelse(vol$volunteer=="yes",1,0)
# nos queda:
vol[,c("volunteer","IsVolunteer","IsVolunteer_1")]
View(vol)
vol$IsVolunteer=ifelse(vol$volunteer=="yes",T,F)
vol$IsVolunteer_1=ifelse(vol$volunteer=="yes",1,0)
# nos queda:
library(magrittr)
vol[,c("volunteer","IsVolunteer","IsVolunteer_1")]%>%
rmarkdown::paged_table(options = )
h1b=formula(IsVolunteer~sex)
h1c=formula(IsVolunteer_1~sex)
#regression
summary(glm(h1b, data=vol,family = binomial))
summary(glm(h1c, data=vol,family = binomial))
vol$IsVolunteer=ifelse(vol$volunteer=="yes",T,F)
vol$IsVolunteer_1=ifelse(vol$volunteer=="yes",1,0)
vol$IsVolunteer_claro=ifelse(vol$volunteer=="yes","claro","nunca")
# nos queda:
library(magrittr)
vol[,c("volunteer","IsVolunteer","IsVolunteer_1")]%>%
rmarkdown::paged_table(options = )
vol$IsVolunteer=ifelse(vol$volunteer=="yes",T,F)
vol$IsVolunteer_1=ifelse(vol$volunteer=="yes",1,0)
vol$IsVolunteer_claro=ifelse(vol$volunteer=="yes","claro","nunca")
# nos queda:
library(magrittr)
vol[,c("volunteer","IsVolunteer","IsVolunteer_1","IsVolunteer_claro")]%>%
rmarkdown::paged_table(options = )
h1b=formula(IsVolunteer~sex)
h1c=formula(IsVolunteer_1~sex)
h1d=formula(IsVolunteer_claro~sex)
#regression
summary(glm(h1b, data=vol,family = binomial))
summary(glm(h1c, data=vol,family = binomial))
summary(glm(h1d, data=vol,family = binomial))
vol$IsVolunteer=ifelse(vol$volunteer=="yes",T,F)
vol$IsVolunteer_1=ifelse(vol$volunteer=="yes",1,0)
vol$IsVolunteer_claro=as.factor(ifelse(vol$volunteer=="yes",
"claro","nunca"))
# nos queda:
library(magrittr)
vol[,c("volunteer","IsVolunteer","IsVolunteer_1","IsVolunteer_claro")]%>%
rmarkdown::paged_table(options = )
h1b=formula(IsVolunteer~sex)
h1c=formula(IsVolunteer_1~sex)
h1d=formula(IsVolunteer_claro~sex)
#regression
summary(glm(h1b, data=vol,family = binomial))
summary(glm(h1c, data=vol,family = binomial))
summary(glm(h1d, data=vol,family = binomial))
vol$IsVolunteer=ifelse(vol$volunteer=="yes",T,F)
vol$IsVolunteer_1=as.integer(ifelse(vol$volunteer=="yes",1,0))
vol$IsVolunteer_claro=as.factor(ifelse(vol$volunteer=="yes",
"claro","nunca"))
# nos queda:
library(magrittr)
vol[,c("volunteer","IsVolunteer","IsVolunteer_1","IsVolunteer_claro")]%>%
rmarkdown::paged_table(options = )
h1b=formula(IsVolunteer~sex)
h1c=formula(IsVolunteer_1~sex)
h1d=formula(IsVolunteer_claro~sex)
summary(glm(h1c, data=vol,family = binomial))
summary(glm(h1d, data=vol,family = binomial))
summary(glm(h1b, data=vol,family = binomial))
glm(h1b, data=vol,family = binomial)
coef(glm(h1b, data=vol,family = binomial))
coef(glm(h1c, data=vol,family = binomial))
coef(glm(h1d, data=vol,family = binomial))
sexF=coef(rlog1)["sexfemale"]
exp(sexF)
rm(list = ls()) # clear memory
knitr::knit_hooks$set(inline = as.character) # inline as string
gitLink="https://vincentarelbundock.github.io/Rdatasets/csv/carData/Cowles.csv"
vol=read.csv(gitLink)[,-1] #no first column
# formatting:
vol[,c(3,4)]=lapply(vol[,c(3,4)],as.factor)
# display table
library(magrittr) # needed for pipe %>%
vol%>%
rmarkdown::paged_table()
library(summarytools)
library(kableExtra)
# usemos la función "dfSummary" de paquete "summarytools"
dfSummary(vol,
plain.ascii  = FALSE,
varnumbers = FALSE,
style        = "grid",
graph.col=F,
na.col    = FALSE) %>%
kable(caption = "Descriptivos Univariados")%>%
kable_styling(full_width = F)
dep=vol$volunteer # a la fila
ind=vol$sex # a la columna
volsexTable=table(dep,ind,dnn = c('volunteer','sex'))
### suma por fila y columna
addmargins(volsexTable)%>%
kable(caption = "Tabla de Contingencia: 'Sexo' y 'Ser Voluntario'")%>%
kableExtra::kable_styling(full_width = F)
ProbMujVol=volsexTable[2,1]/sum(volsexTable[,1])
MASS::fractions(ProbMujVol)
ProbMujVol
OddsMujVol=volsexTable[2,1]/volsexTable[1,1]
MASS::fractions(OddsMujVol)
OddsMujVol
ProbMujVol/(1-ProbMujVol)
ProbHomVol=volsexTable[2,2]/sum(volsexTable[,2])
MASS::fractions(ProbHomVol)
ProbHomVol
OddsHomVol=ProbHomVol/(1-ProbHomVol)
OddsHomVol
(OR_MujHom=OddsMujVol/OddsHomVol)
MASS::fractions(OddsMujVol/OddsHomVol)
mosaicplot( t(volsexTable),col = c("orange", "green"),main = "")
### semilla
set.seed(2019)
### first hypothesis
h1=formula(volunteer~sex)
#regression
rlog1=glm(h1, data=vol,family = binomial)
modelrl=list('Ser Voluntario (I)'=rlog1)
#f <- function(x) format(x, digits = 4, scientific = FALSE)
library(modelsummary)
modelsummary(modelrl,
title = "Regresión Logística",
stars = TRUE,
output = "kableExtra")
# la representación numérica
as.numeric(as.factor(c("no","yes")))
vol$IsVolunteer=ifelse(vol$volunteer=="yes",T,F)
vol$IsVolunteer_1=as.integer(ifelse(vol$volunteer=="yes",1,0))
vol$IsVolunteer_claro=as.factor(ifelse(vol$volunteer=="yes",
"claro","nunca"))
# nos queda:
library(magrittr)
vol[,c("volunteer","IsVolunteer","IsVolunteer_1","IsVolunteer_claro")]%>%
rmarkdown::paged_table(options = )
h1b=formula(IsVolunteer~sex)
h1c=formula(IsVolunteer_1~sex)
h1d=formula(IsVolunteer_claro~sex)
coef(glm(h1b, data=vol,family = binomial))
coef(glm(h1c, data=vol,family = binomial))
coef(glm(h1d, data=vol,family = binomial))
# cambio de referencia
vol$sex=relevel(vol$sex,ref = "male")
#regresion
rlog1=glm(h1, data=vol,family = binomial)
modelrl=list('Ser Voluntario (I)'=rlog1)
modelsummary(modelrl,
title = "Regresión Logística (con cambio de referencia en sexo)",
stars = TRUE,
output = "kableExtra")
sexF=coef(rlog1)["sexfemale"]
exp(sexF)
### second hypothesis
h2=formula(volunteer~sex + neuroticism)
rlog2=glm(h2, data=vol,family = binomial)
modelsrl=list('Ser Voluntario (I)'=rlog1,
'Ser Voluntario (II)'=rlog2)
# formato creado para modelsummary
formatoNumero = function(x) format(x, digits = 4, scientific = FALSE)
modelsummary(modelsrl,
fmt=formatoNumero, # usa función que creé antes
exponentiate = T, # coeficientes sin logaritmo
statistic = 'conf.int', # mostrar ICs
title = "Regresión Logísticas (Coeficientes Exponenciados)",
stars = TRUE,
output = "kableExtra")
h3=formula(volunteer~sex + neuroticism + extraversion)
rlog3=glm(h3, data=vol,family = binomial)
summary(rlog3)
modelsrl=list('Ser Voluntario (I)'=rlog1,
'Ser Voluntario (II)'=rlog2,
'Ser Voluntario (III)'=rlog3)
f <- function(x) format(x, digits = 4, scientific = FALSE)
modelsummary(modelsrl,
fmt=formatoNumero,
exponentiate = T,
statistic = 'conf.int',
title = "Comparando Regresión Logísticas (Coeficientes Exponenciados)",
stars = TRUE,
gof_map = c("nobs","aic","bic","rmse","logLik"), #comparar
gof_omit = c("F"),
output = "kableExtra")
round(exp(coef(rlog3)["sexfemale"]),4)
100*round(abs(1-exp(coef(rlog3)["sexfemale"])),4)
round(exp(coef(rlog3)["extraversion"]),4)
round(abs(1-exp(coef(rlog3)["extraversion"])),4)
100*round(abs(1-exp(coef(rlog3)["extraversion"])),4)
round(abs(1-exp(coef(rlog3)["sexfemale"])),4)
100*round(abs(1-exp(coef(rlog3)["sexfemale"])),4)
round(exp(coef(rlog3)["extraversion"]),4)
round(exp(coef(rlog3)["extraversion"]),4)
100*round(abs(1-exp(coef(rlog3)["extraversion"])),4)
exp(coef(rlog3)["extraversion"]))
exp(coef(rlog3)["extraversion"])
100*round(abs(1-0.8),4)
100*round(abs(1-exp(coef(rlog3)["extraversion"])),4)
